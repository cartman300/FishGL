using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using cl_int = System.Int32;
using cl_uint = System.UInt32;
using size_t = System.UInt64;

namespace OpenCL {
	public enum ErrorCode : cl_int {
		CL_SUCCESS = 0,
		CL_DEVICE_NOT_FOUND = -1,
		CL_DEVICE_NOT_AVAILABLE = -2,
		CL_COMPILER_NOT_AVAILABLE = -3,
		CL_MEM_OBJECT_ALLOCATION_FAILURE = -4,
		CL_OUT_OF_RESOURCES = -5,
		CL_OUT_OF_HOST_MEMORY = -6,
		CL_PROFILING_INFO_NOT_AVAILABLE = -7,
		CL_MEM_COPY_OVERLAP = -8,
		CL_IMAGE_FORMAT_MISMATCH = -9,
		CL_IMAGE_FORMAT_NOT_SUPPORTED = -10,
		CL_BUILD_PROGRAM_FAILURE = -11,
		CL_MAP_FAILURE = -12,

		CL_INVALID_VALUE = -30,
		CL_INVALID_DEVICE_TYPE = -31,
		CL_INVALID_PLATFORM = -32,
		CL_INVALID_DEVICE = -33,
		CL_INVALID_CONTEXT = -34,
		CL_INVALID_QUEUE_PROPERTIES = -35,
		CL_INVALID_COMMAND_QUEUE = -36,
		CL_INVALID_HOST_PTR = -37,
		CL_INVALID_MEM_OBJECT = -38,
		CL_INVALID_IMAGE_FORMAT_DESCRIPTOR = -39,
		CL_INVALID_IMAGE_SIZE = -40,
		CL_INVALID_SAMPLER = -41,
		CL_INVALID_BINARY = -42,
		CL_INVALID_BUILD_OPTIONS = -43,
		CL_INVALID_PROGRAM = -44,
		CL_INVALID_PROGRAM_EXECUTABLE = -45,
		CL_INVALID_KERNEL_NAME = -46,
		CL_INVALID_KERNEL_DEFINITION = -47,
		CL_INVALID_KERNEL = -48,
		CL_INVALID_ARG_INDEX = -49,
		CL_INVALID_ARG_VALUE = -50,
		CL_INVALID_ARG_SIZE = -51,
		CL_INVALID_KERNEL_ARGS = -52,
		CL_INVALID_WORK_DIMENSION = -53,
		CL_INVALID_WORK_GROUP_SIZE = -54,
		CL_INVALID_WORK_ITEM_SIZE = -55,
		CL_INVALID_GLOBAL_OFFSET = -56,
		CL_INVALID_EVENT_WAIT_LIST = -57,
		CL_INVALID_EVENT = -58,
		CL_INVALID_OPERATION = -59,
		CL_INVALID_GL_OBJECT = -60,
		CL_INVALID_BUFFER_SIZE = -61,
		CL_INVALID_MIP_LEVEL = -62,
		CL_INVALID_GLOBAL_WORK_SIZE = -63
	}

	public enum cl_platform_info {
		CL_PLATFORM_PROFILE = 0x0900,
		CL_PLATFORM_VERSION = 0x0901,
		CL_PLATFORM_NAME = 0x0902,
		CL_PLATFORM_VENDOR = 0x0903,
		CL_PLATFORM_EXTENSIONS = 0x0904,
	}

	public enum cl_mem_flags {
		CL_MEM_READ_WRITE = (1 << 0),
		CL_MEM_WRITE_ONLY = (1 << 1),
		CL_MEM_READ_ONLY = (1 << 2),
		CL_MEM_USE_HOST_PTR = (1 << 3),
		CL_MEM_ALLOC_HOST_PTR = (1 << 4),
		CL_MEM_COPY_HOST_PTR = (1 << 5),

		CL_MEM_HOST_WRITE_ONLY = (1 << 7),
		CL_MEM_HOST_READ_ONLY = (1 << 8),
		CL_MEM_HOST_NO_ACCESS = (1 << 9),
		CL_MEM_SVM_FINE_GRAIN_BUFFER = (1 << 10),   /* used by cl_svm_mem_flags only */
		CL_MEM_SVM_ATOMICS = (1 << 11),   /* used by cl_svm_mem_flags only */
		CL_MEM_KERNEL_READ_AND_WRITE = (1 << 12)
	}

	public enum cl_program_build_info {
		CL_PROGRAM_BUILD_STATUS = 0x1181,
		CL_PROGRAM_BUILD_OPTIONS = 0x1182,
		CL_PROGRAM_BUILD_LOG = 0x1183,
		CL_PROGRAM_BINARY_TYPE = 0x1184,
		CL_PROGRAM_BUILD_GLOBAL_VARIABLE_TOTAL_SIZE = 0x1185,
	}

	public enum cl_device_type : uint {
		CL_DEVICE_TYPE_DEFAULT = (1 << 0),
		CL_DEVICE_TYPE_CPU = (1 << 1),
		CL_DEVICE_TYPE_GPU = (1 << 2),
		CL_DEVICE_TYPE_ACCELERATOR = (1 << 3),
		CL_DEVICE_TYPE_CUSTOM = (1 << 4),
		CL_DEVICE_TYPE_ALL = 0xFFFFFFFF
	}

	public enum cl_command_queue_properties {
		NONE = 0,
		CL_QUEUE_OUT_OF_ORDER_EXEC_MODE_ENABLE = (1 << 0),
		CL_QUEUE_PROFILING_ENABLE = (1 << 1),
		CL_QUEUE_ON_DEVICE = (1 << 2),
		CL_QUEUE_ON_DEVICE_DEFAULT = (1 << 3)
	}


	public enum cl_kernel_work_group_info {
		CL_KERNEL_WORK_GROUP_SIZE = 0x11B0,
		CL_KERNEL_COMPILE_WORK_GROUP_SIZE = 0x11B1,
		CL_KERNEL_LOCAL_MEM_SIZE = 0x11B2,
		CL_KERNEL_PREFERRED_WORK_GROUP_SIZE_MULTIPLE = 0x11B3,
		CL_KERNEL_PRIVATE_MEM_SIZE = 0x11B4,
		CL_KERNEL_GLOBAL_WORK_SIZE = 0x11B5
	}
	public enum cl_map_flags {
		CL_MAP_READ = (1 << 0),
		CL_MAP_WRITE = (1 << 1),
		CL_MAP_WRITE_INVALIDATE_REGION = (1 << 2)
	}
}
